[{"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\index.js":"1","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Home.jsx":"2","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx":"3","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\app.route.jsx":"4","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Pages\\Activate.jsx":"5","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Pages\\Login.jsx":"6","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx":"7","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\controllers\\localStorage.js":"8","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\ListUser.jsx":"9","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx":"10","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\UploadData.jsx":"11","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Profile.jsx":"12","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx":"13","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx":"14","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx":"15","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx":"16","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx":"17","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"18","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"19","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"20","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx":"21","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js":"22","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx":"23","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx":"24","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx":"25","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx":"26","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\controllers\\PushData.js":"27","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"28","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx":"29","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\PracticeOnline.jsx":"30","F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\firebase\\firebase-confix.js":"31","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\index.js":"32","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Home.jsx":"33","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx":"34","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\app.route.jsx":"35","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Pages\\Activate.jsx":"36","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Pages\\Login.jsx":"37","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx":"38","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\controllers\\localStorage.js":"39","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx":"40","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\PracticeOnline.jsx":"41","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\UploadData.jsx":"42","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Profile.jsx":"43","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx":"44","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\ListUser.jsx":"45","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\firebase\\firebase-confix.js":"46","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx":"47","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx":"48","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx":"49","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx":"50","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx":"51","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx":"52","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx":"53","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx":"54","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\controllers\\PushData.js":"55","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"56","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"57","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"58","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx":"59","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx":"60","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js":"61","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"62","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\UploadFileView\\json.jsx":"63","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\UploadFileView\\excel.jsx":"64"},{"size":1336,"mtime":1621948842642,"results":"65","hashOfConfig":"66"},{"size":6435,"mtime":1625456064454,"results":"67","hashOfConfig":"66"},{"size":3905,"mtime":1621948842658,"results":"68","hashOfConfig":"66"},{"size":522,"mtime":1621948842626,"results":"69","hashOfConfig":"66"},{"size":3769,"mtime":1621948842658,"results":"70","hashOfConfig":"66"},{"size":10420,"mtime":1626150873051,"results":"71","hashOfConfig":"66"},{"size":3104,"mtime":1626154787680,"results":"72","hashOfConfig":"66"},{"size":2389,"mtime":1625758512189,"results":"73","hashOfConfig":"66"},{"size":4063,"mtime":1625588208947,"results":"74","hashOfConfig":"66"},{"size":7737,"mtime":1625911538617,"results":"75","hashOfConfig":"66"},{"size":15624,"mtime":1625588208960,"results":"76","hashOfConfig":"66"},{"size":2449,"mtime":1621948842658,"results":"77","hashOfConfig":"66"},{"size":10145,"mtime":1625588208955,"results":"78","hashOfConfig":"66"},{"size":1305,"mtime":1621948842658,"results":"79","hashOfConfig":"66"},{"size":1054,"mtime":1621948842658,"results":"80","hashOfConfig":"66"},{"size":1088,"mtime":1621948842658,"results":"81","hashOfConfig":"66"},{"size":1115,"mtime":1621948842658,"results":"82","hashOfConfig":"66"},{"size":315,"mtime":1621948842751,"results":"83","hashOfConfig":"66"},{"size":834,"mtime":1621948842751,"results":"84","hashOfConfig":"66"},{"size":3079,"mtime":1621948842751,"results":"85","hashOfConfig":"66"},{"size":5231,"mtime":1621948842658,"results":"86","hashOfConfig":"66"},{"size":7303,"mtime":1621948842751,"results":"87","hashOfConfig":"66"},{"size":680,"mtime":1621948842658,"results":"88","hashOfConfig":"66"},{"size":644,"mtime":1621948842658,"results":"89","hashOfConfig":"66"},{"size":543,"mtime":1621948842658,"results":"90","hashOfConfig":"66"},{"size":5472,"mtime":1625588208958,"results":"91","hashOfConfig":"66"},{"size":2336,"mtime":1625674136379,"results":"92","hashOfConfig":"66"},{"size":1497,"mtime":1621948842767,"results":"93","hashOfConfig":"66"},{"size":4691,"mtime":1621948842642,"results":"94","hashOfConfig":"66"},{"size":18270,"mtime":1626076157263,"results":"95","hashOfConfig":"66"},{"size":492,"mtime":1625588208946,"results":"96","hashOfConfig":"66"},{"size":1336,"mtime":1626160828801,"results":"97","hashOfConfig":"98"},{"size":6446,"mtime":1626235502458,"results":"99","hashOfConfig":"98"},{"size":3905,"mtime":1626160828832,"results":"100","hashOfConfig":"98"},{"size":522,"mtime":1626160828801,"results":"101","hashOfConfig":"98"},{"size":3769,"mtime":1626160828832,"results":"102","hashOfConfig":"98"},{"size":10430,"mtime":1626245661417,"results":"103","hashOfConfig":"98"},{"size":3104,"mtime":1626160828832,"results":"104","hashOfConfig":"98"},{"size":2389,"mtime":1626160828801,"results":"105","hashOfConfig":"98"},{"size":10323,"mtime":1626794896613,"results":"106","hashOfConfig":"98"},{"size":22785,"mtime":1626532740636,"results":"107","hashOfConfig":"98"},{"size":16541,"mtime":1626880947820,"results":"108","hashOfConfig":"98"},{"size":2449,"mtime":1626160828817,"results":"109","hashOfConfig":"98"},{"size":8202,"mtime":1626246495232,"results":"110","hashOfConfig":"98"},{"size":4557,"mtime":1626189177806,"results":"111","hashOfConfig":"98"},{"size":492,"mtime":1626160828801,"results":"112","hashOfConfig":"98"},{"size":543,"mtime":1626192951541,"results":"113","hashOfConfig":"98"},{"size":644,"mtime":1626160828817,"results":"114","hashOfConfig":"98"},{"size":680,"mtime":1626160828817,"results":"115","hashOfConfig":"98"},{"size":1305,"mtime":1626160828817,"results":"116","hashOfConfig":"98"},{"size":1088,"mtime":1626160828817,"results":"117","hashOfConfig":"98"},{"size":5472,"mtime":1626186414214,"results":"118","hashOfConfig":"98"},{"size":1054,"mtime":1626160828817,"results":"119","hashOfConfig":"98"},{"size":1115,"mtime":1626160828817,"results":"120","hashOfConfig":"98"},{"size":4666,"mtime":1626883714252,"results":"121","hashOfConfig":"98"},{"size":315,"mtime":1626160828933,"results":"122","hashOfConfig":"98"},{"size":1497,"mtime":1626160828948,"results":"123","hashOfConfig":"98"},{"size":834,"mtime":1626160828948,"results":"124","hashOfConfig":"98"},{"size":5231,"mtime":1626160828817,"results":"125","hashOfConfig":"98"},{"size":4691,"mtime":1626160828817,"results":"126","hashOfConfig":"98"},{"size":7303,"mtime":1626160828933,"results":"127","hashOfConfig":"98"},{"size":3079,"mtime":1626160828933,"results":"128","hashOfConfig":"98"},{"size":417,"mtime":1626227589003,"results":"129","hashOfConfig":"98"},{"size":543,"mtime":1626192830595,"results":"130","hashOfConfig":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ais5x",{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},"rommme",{"filePath":"196","messages":"197","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"195"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"195"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"195"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"195"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"195"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"195"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"195"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"195"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"195"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"195"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\index.js",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Home.jsx",["271","272","273","274","275","276","277","278"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\app.route.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Pages\\Activate.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Pages\\Login.jsx",["279"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx",["280"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\controllers\\localStorage.js",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\ListUser.jsx",["281","282","283","284","285","286","287"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx",["288","289","290","291"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\UploadData.jsx",["292","293","294","295","296","297"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Profile.jsx",["298","299","300"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx",["301","302","303","304","305","306","307"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx",["308","309","310","311","312","313","314"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx",["315","316"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\controllers\\PushData.js",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx",["317","318","319"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\views\\Components\\PracticeOnline.jsx",["320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335"],"F:\\toeic seb\\web admin\\web\\web_admin\\web\\src\\firebase\\firebase-confix.js",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\index.js",[],["336","337"],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Home.jsx",["338","339","340","341","342","343","344","345"],"import React, { useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Menu, Badge, Avatar, Popover } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  TeamOutlined,\r\n  UsergroupAddOutlined,\r\n  UploadOutlined,\r\n  BellOutlined,\r\n  NotificationOutlined,\r\n  ProfileOutlined\r\n} from '@ant-design/icons';\r\n\r\n// auth\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { isAuth, getCookie, signout } from '../controllers/localStorage';\r\nimport axios from 'axios';\r\n// view updata\r\nimport UpData from './Components/UploadData';\r\nimport Practice from './Components/PracticeOnline';\r\n// view list user\r\nimport ListUser from './Components/ListUser';\r\n// view list user admin\r\nimport ListUserAdmin from './Components/ListUserAdmin';\r\n// import components notfication\r\nimport Noti from './Components/Noti';\r\nimport Notification from './Components/SendNoti';\r\nimport Profile from './Components/Profile'\r\nconst { Header, Sider, Content } = Layout; // views\r\nconst Home = ({ history }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [index, setIndex] = useState(1);\r\n  const [dataNoti, setDataNoti] = useState([]);\r\n  const [amountNoti, setAmountNoti] = useState(0);\r\n  const [load, setLoad] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [visibleNoti, setVisibleNoti] = useState(false);\r\n  const [title, setTitle] = useState(true);\r\n  const toggle = () => {\r\n    setTitle(!title);\r\n    setCollapsed(!collapsed);\r\n  };\r\n  const checkIAuth = () => {\r\n    if (!isAuth()) {\r\n      history.push('/Login')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    checkIAuth();\r\n  }, [])\r\n  // logout\r\n  const Logout = () => {\r\n    signout(() => {\r\n      history.push('/Login')\r\n    });\r\n  }\r\n  // set change logout\r\n  const handleVisibleChange = visible => {\r\n    setVisible(visible);\r\n  };\r\n  // set click notifi\r\n  const handleVisibleChangeNoti = visible => {\r\n    setVisibleNoti(visible);\r\n    setAmountNoti(0);\r\n  };\r\n  // push datanoti\r\n  const pushDataNoti = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n      dataNoti.forEach(element => {\r\n        data.push(element);\r\n      });\r\n      resolve(data);\r\n    });\r\n  }\r\n  // set data notifi\r\n  const setDataNotification = (data) => {\r\n    setAmountNoti(data.length);\r\n    pushDataNoti(data).then(res => {\r\n      setDataNoti(res);\r\n    });\r\n  }\r\n  // set view noti\r\n  const viewNoti = () => {\r\n    return (\r\n      <div style={{ overflowY: 'scroll', height: 200 }} >\r\n        {\r\n          dataNoti.map((element) =>\r\n            <Noti\r\n              content={element.content}\r\n              date={element.date}\r\n              status={element.status} />\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider trigger={null} collapsible collapsed={collapsed}>\r\n        {title ? <div className=\"logo\" style={{ justifyContent: 'center', display: 'flex', }}>\r\n          <h4 style={{ color: 'white', fontSize: 20, textAlign: 'center' }}>TOEIC SEB</h4>\r\n        </div> : null}\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n          <Menu.Item key=\"1\" icon={<TeamOutlined />} onClick={() => {\r\n            setIndex(1);\r\n            checkIAuth();\r\n          }} >\r\n            Admin\r\n            </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<ProfileOutlined />} onClick={() => {\r\n            setIndex(2);\r\n            checkIAuth();\r\n          }} >\r\n            Practice Online\r\n            </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<UsergroupAddOutlined />} onClick={() => {\r\n            setIndex(3);\r\n            checkIAuth();\r\n          }}>\r\n            User\r\n            </Menu.Item>\r\n          <Menu.Item key=\"4\" icon={<UploadOutlined />} onClick={() => {\r\n            setIndex(4);\r\n            checkIAuth();\r\n          }}>\r\n            Data\r\n            </Menu.Item>\r\n          <Menu.Item key=\"5\" icon={<NotificationOutlined />} onClick={() => {\r\n            setIndex(5);\r\n            checkIAuth();\r\n          }}>\r\n            Send notification\r\n            </Menu.Item>\r\n          {/* <Menu.Item key=\"6\" icon={<ProfileOutlined />} onClick={() => {\r\n            setIndex(6);\r\n            checkIAuth();\r\n          }}>\r\n            Profile\r\n            </Menu.Item> */}\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header className=\"site-layout-background\" style={{ padding: 0, display: 'flex' }}>\r\n          {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n            className: 'trigger',\r\n            onClick: toggle,\r\n          })}\r\n          <div style={{ flex: 1, display: 'flex', justifyContent: 'flex-end', alignItems: 'center', paddingRight: 30, marginLeft: 20 }}>\r\n            <div style={{ width: 100, display: 'flex' }}>\r\n              <div style={{ width: 150, flex: 1 }}>\r\n                <Popover\r\n                  placement=\"leftTop\"\r\n                  content={\r\n                    viewNoti\r\n                  }\r\n                  title=\"All notification\"\r\n                  trigger=\"click\"\r\n                  visible={visibleNoti}\r\n                  onVisibleChange={handleVisibleChangeNoti}\r\n                >\r\n                  <Badge count={amountNoti}>\r\n                    <Avatar icon={<BellOutlined />} />\r\n                  </Badge>\r\n                </Popover>\r\n              </div>\r\n              <div style={{ width: 100, flex: 1 }}>\r\n                <Popover\r\n                  content={<a onClick={Logout}>Logout</a>}\r\n                  title=\"Option\"\r\n                  trigger=\"click\"\r\n                  visible={visible}\r\n                  onVisibleChange={handleVisibleChange}\r\n                >\r\n                  <Avatar icon={<UserOutlined />} />\r\n                </Popover>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Header>\r\n        <div style={{ padding: 10 }}>\r\n          {\r\n            index === 1 ? <ListUserAdmin />\r\n              : index === 2 ? <Practice setDataNotification={(setDataNotification)} />\r\n                : index === 3 ? <ListUser />\r\n                  : index === 4 ? <UpData setDataNotification={(setDataNotification)} />\r\n                    : index === 5 ? <Notification></Notification>\r\n                      : <Profile />\r\n          }\r\n        </div>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\nexport default Home\r\n","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Pages\\ResetPassword.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\app.route.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Pages\\Activate.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Pages\\Login.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Pages\\ForgetPassword.jsx",["346"],"import React, { useState } from \"react\";\r\nimport authSvg from \"../../assests/forget.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { firebase } from '../../firebase/firebase-confix';\r\nconst ForgetPassword = ({ history }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n  });\r\n  const [isFirst, setIsFirst] = useState(true);\r\n\r\n  const { email } = formData;\r\n\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    if(isFirst){\r\n      e.preventDefault();\r\n      if (email) {\r\n        setFormData({ ...formData, textChange: \"Submitting\" });\r\n        firebase.auth().sendPasswordResetEmail(email).then(() => {\r\n          toast.success(`Please check your email!`);\r\n          setIsFirst(false);\r\n        }).catch(error => {\r\n          console.log(error.message);\r\n          toast.success(error.message);\r\n        })\r\n      } else {\r\n        toast.error(\"Please fill all fields\");\r\n      }\r\n    }else{\r\n      history.push('/Login')\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n      <ToastContainer />\r\n      <div className=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\">\r\n        <div className=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n          <div className=\"mt-12 flex flex-col items-center\">\r\n            <h1 className=\"text-2xl xl:text-3xl font-extrabold\">\r\n              Forget Password\r\n            </h1>\r\n            <div className=\"w-full flex-1 mt-8 text-indigo-500\">\r\n              <form\r\n                className=\"mx-auto max-w-xs relative \"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={handleChange(\"email\")}\r\n                  value={email}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                >\r\n                  <i className=\"fas fa-sign-in-alt  w-6  -ml-2\" />\r\n                  <span className=\"ml-3\">{isFirst===true?'Submit':'Go login page'}</span>\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n          <div\r\n            className=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n            style={{ backgroundImage: `url(${authSvg})` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\controllers\\localStorage.js",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\SendNoti.jsx",["347","348","349","350","351","352","353"],"import React, { useState, useEffect } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button, Modal } from \"antd\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { getCookie } from '../../controllers/localStorage';\r\nimport axios from 'axios';\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function Notification() {\r\n  const classes = useStyles();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const packageBuy = ['orange', 'red', 'blue', 'purple'];\r\n\r\n  const HEADER = {\r\n    Accept: 'application/json, text/plain, */*',\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': \"*\",\r\n    mode: 'no-cors',\r\n    Authorization: getCookie().token,\r\n  }\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const sendMessage = (values) => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/sendmessage/send/package`, {\r\n      method: 'POST',\r\n      headers: HEADER,\r\n      body: JSON.stringify({\r\n        title: values.Title,\r\n        text: values.Content,\r\n      }),\r\n    }).then(response => response.json()).then((data) => {\r\n      console.log(data)\r\n      if(data.status){\r\n        toast.success(data.messages, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }else{\r\n        toast.error(data.messages, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n     \r\n    })\r\n  }\r\n  const sendVoca = () => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/sendmessage/send/vocarandom`, {\r\n      method: 'POST',\r\n      headers: HEADER,\r\n      body: JSON.stringify({\r\n        title: 'values.Title',\r\n        text: 'values.Content',\r\n      }),\r\n    }).then(response => response.json()).then((data) => {\r\n      console.log(data)\r\n      if(data.status){\r\n        toast.success(data.messages, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }else{\r\n        toast.error(data.messages, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n     \r\n    })\r\n  }\r\n  const onFinish = (values) => {\r\n    sendMessage(values);\r\n    setIsModalVisible(false);\r\n  };\r\n  const layout = {\r\n    labelCol: {\r\n      span: 3,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n  const validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n  };\r\n  return (\r\n    <Card>\r\n      <ToastContainer />\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>Send Notification</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>BASIC 1</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button\r\n              onClick={() => {\r\n                sendMessage({ Title: \"Thông báo khuyến mãi 😍😍😍\", Content: \"Giảm giá 5% cho gói BASIC 1\" })\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>BASIC 2</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button\r\n              onClick={() => {\r\n                sendMessage({ Title: \"Thông báo khuyến mãi 😍😍😍\", Content: \"Giảm giá 5% cho gói BASIC 2\" })\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>STANDART</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button\r\n              onClick={() => {\r\n                sendMessage({ Title: \"Thông báo khuyến mãi 😍😍😍\", Content: \"Giảm giá 5% cho gói STANDART\" })\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi thông báo giảm giá <text style={{ fontWeight: 'bold', color: 'black' }}>5%</text> cho gói <text style={{ fontWeight: 'bold' }}>PREMIUM</text></text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button\r\n              onClick={() => {\r\n                sendMessage({ Title: \"Thông báo khuyến mãi 😍😍😍\", Content: \"Giảm giá 5% cho gói PREMIUM\" })\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ borderBottomColor: '#A0ABA6', borderBottomWidth: 1, }} />\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Tùy chỉnh</text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button style={{ backgroundColor: '#ab47bc', color: 'white' }} onClick={\r\n              showModal\r\n            }>Custom</Button>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: 'flex', padding: 10, flexDirection: 'row' }} >\r\n          <div style={{ flex: 7, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\r\n            <text style={{ textAlign: 'start', fontSize: 15, color: '#0A81B9' }}>Gửi ngẩu nhiên 1 từ vựng</text>\r\n          </div>\r\n          <div style={{ flex: 3, justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button style={{ backgroundColor: '#ab47bc', color: 'white' }}\r\n              onClick={() => {\r\n                sendVoca();\r\n              }}\r\n            >Send</Button>\r\n          </div>\r\n        </div>\r\n        <Modal  destroyOnClose={true} title=\"Custom\" visible={isModalVisible} footer={null} onCancel={handleCancel}>\r\n          <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n            <Form.Item\r\n              name={'Title'}\r\n              label=\"Title\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name={'Content'} label=\"Content\">\r\n              <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 3 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\PracticeOnline.jsx",["354","355","356","357","358","359","360","361","362","363","364","365","366","367"],"import React, { useState, useEffect } from \"react\";\r\nimport { getCookie } from '../../controllers/localStorage';\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport XLSX from 'xlsx';\r\nimport UploadFileView from './UploadFileView/excel';\r\nimport UploadFileViewJson from './UploadFileView/json';\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Tag, Select, Space, Button, Modal, notification, Form, Input, DatePicker } from \"antd\";\r\nimport moment from \"moment\";\r\n// api up data\r\nimport { pushOnlinePracticejson, updateFile, pushOnlinePractice, removeDataOnline } from '../../controllers/PushData';\r\nimport { element } from \"prop-types\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport Lottie from 'react-lottie';\r\nimport loadingAnimation from '../../animation/loading.json';\r\nimport fs from 'fs';\r\nimport { PanoramaFishEye } from \"@material-ui/icons\";\r\nimport fullTest from '../../assests/full.json';\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nlet datasetFile = [{\r\n  \"name\": \"jayanth\",\r\n  \"data\": \"scd\",\r\n  \"abc\": \"sdef\"\r\n}]\r\n\r\n\r\nlet content = [\r\n  {\r\n    name: 'part1',\r\n    title: 'Up load data part 1'\r\n  },\r\n  {\r\n    name: 'part2',\r\n    title: 'Up load data part 2'\r\n  },\r\n  {\r\n    name: 'part3',\r\n    title: 'Up load data part 3'\r\n  },\r\n  {\r\n    name: 'part4',\r\n    title: 'Up load data part 4'\r\n  },\r\n  {\r\n    name: 'part5',\r\n    title: 'Up load data part 5'\r\n  },\r\n  {\r\n    name: 'part6',\r\n    title: 'Up load data part 6'\r\n  },\r\n  {\r\n    name: 'part7',\r\n    title: 'Up load data part 7'\r\n  },\r\n  {\r\n    name: 'part3detail',\r\n    title: 'Up load data part 3 detail'\r\n  },\r\n  {\r\n    name: 'part4detail',\r\n    title: 'Up load data part 4 detail'\r\n  },\r\n  {\r\n    name: 'part6detail',\r\n    title: 'Up load data part 6 detail'\r\n  },\r\n  {\r\n    name: 'part7detail',\r\n    title: 'Up load data part 7 detail'\r\n  }\r\n\r\n]\r\nexport default function PracticeOnline(props) {\r\n  const { setDataNotification } = props;\r\n  const classes = useStyles();\r\n  const [loadingEdit, setLoadingEdit] = React.useState(false);\r\n  const [loadingDelete, setLoadingDelete] = React.useState(false);\r\n  const [isModalVisibleJS, setIsModalVisibleJS] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [selectUpdate, setSelectUpdate] = React.useState(''); // select part current\r\n  const [valueUpdate, setvalueUpdate] = React.useState('');\r\n  const [nameModal, setNameModal] = useState('Add');\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataUpdate, setDataUpdate] = React.useState([]);\r\n  const [visibleEdit, setVisibleEdit] = React.useState(false);  // load model edit\r\n  const [visibleDelete, setVisibleDelete] = React.useState(false);  // load model edit\r\n  // const [dataCurrent, setDataCurrent] = React.useState([]); // data current\r\n  const [isLoad, setLoad] = React.useState(true);\r\n  const { Option } = Select;\r\n  // columns\r\n  const columns = [\r\n\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"Title\",\r\n      key: \"Name\"\r\n    },\r\n    {\r\n      title: \"status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\"\r\n    },\r\n    {\r\n      title: \"date\",\r\n      dataIndex: \"Date\",\r\n      key: \"Buy\"\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <div style={{ width: 70, display: 'flex', paddingRight: 5 }}>\r\n          {/* <Button type=\"primary\"\r\n            onClick={() => {\r\n\r\n              setNameModal('Update Data');\r\n              setVisibleEdit(true);\r\n            }}\r\n          >Update</Button> */}\r\n          <Button style={{ marginLeft: 10 }} type=\"primary\"\r\n            onClick={() => {\r\n              setVisibleDelete(true);\r\n            }}>Delete</Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // get test\r\n  const getData = async () => {\r\n    const HEADER = {\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors',\r\n        authorization: getCookie().token,\r\n      },\r\n    };\r\n    return await fetch(`${process.env.REACT_APP_API_URL}/practiceonline/list`, HEADER)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let array = data.data?.map(element => {\r\n          var date = new Date(element.time);\r\n          var d = new Date();\r\n          var n = d.getTime();\r\n          var status = '---';\r\n          if (element.time > n + 7200000) {\r\n            status = 'comming';\r\n          } else if (element.time + 7200000 - n >= 0) {\r\n            status = 'just now';\r\n          } else {\r\n            status = 'closed';\r\n          }\r\n          return {\r\n            IDData: element.idData,\r\n            Buy: element.Buy,\r\n            status: status,\r\n            Date: date.toLocaleDateString(),\r\n            Title: element.title,\r\n          }\r\n        })\r\n        array.sort(function (a, b) {\r\n          return a.IDTest - b.IDTest;\r\n        });\r\n        setData(array);\r\n        setLoad(false);\r\n      });\r\n  }\r\n  // name and data post database\r\n  const dataUpload = {\r\n    dataPart1: [],\r\n    dataPart2: [],\r\n    dataPart3: [],\r\n    dataPart4: [],\r\n    dataPart5: [],\r\n    dataPart6: [],\r\n    dataPart7: [],\r\n    dataPart3Detail: [],\r\n    dataPart4Detail: [],\r\n    dataPart6Detail: [],\r\n    dataPart7Detail: [],\r\n  }\r\n  let dataJson = {};\r\n\r\n  // convert excel to json\r\n  const UploadFile = (e) => {\r\n    // console.log(e);\r\n    return new Promise((resolve, reject) => {\r\n      let selectedFile = e.target.files[0];\r\n      XLSX.utils.json_to_sheet(datasetFile, selectedFile.name);\r\n      if (selectedFile) {\r\n        let fileReader = new FileReader();\r\n        fileReader.readAsBinaryString(selectedFile);\r\n        fileReader.onload = (event) => {\r\n          let data = event.target.result;\r\n          let workbook = XLSX.read(data, { type: \"binary\" });\r\n          // console.log(workbook);\r\n          workbook.SheetNames.forEach(sheet => {\r\n            let rowObject = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheet]);\r\n            let result = JSON.stringify(rowObject, undefined, 4);\r\n            resolve(result);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // set file \r\n  const uploadFile = async (e, name) => {\r\n    switch (name) {\r\n      case 'part1': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart1 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part2': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart2 = data;\r\n          })\r\n        break;\r\n      } case 'part3': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart3 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part4': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart4 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part5': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart5 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part6': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart6 = data;\r\n          })\r\n        break;\r\n      } case 'part7': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart7 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part3detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart3Detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part4detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart4Detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part6detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart6Detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part7detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.dataPart7Detail = data;\r\n          })\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // check data upload\r\n  const checkDataUpload = () => {\r\n    for (const property in dataUpload) {\r\n      if (property.length === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  const updateData = async () => {\r\n    let res = [];\r\n    await updateFile(dataUpdate, selectUpdate)\r\n      .then(data => {\r\n        updateFile(JSON.stringify({ IDYear: valueUpdate.IDYear, IDTest: valueUpdate.IDTest }), 'test')\r\n          .then(data => {\r\n            console.log(data);\r\n          })\r\n        res.push({\r\n          content: `Update data ${selectUpdate} success`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: true\r\n        })\r\n      }).catch((error) => {\r\n        res.push({\r\n          content: `Update data ${selectUpdate} fail`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: false\r\n        })\r\n      });\r\n    setDataNotification(res);\r\n    setVisibleEdit(false);\r\n    setLoadingEdit(false);\r\n  }\r\n  // push data firebase\r\n  const pushData = async () => {\r\n    let res = [];\r\n    await pushOnlinePractice(dataUpload).then(data => {\r\n      console.log('=======>',data);\r\n      if (data.status===true) {\r\n        res.push({\r\n          content: `Add data success`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: data.status\r\n        })\r\n        toast.success('Add data success!', {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n      else {\r\n        res.push({\r\n          content: `Add data fail`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: data.status\r\n        })\r\n        toast.error(data.messages, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n    });\r\n    // set data notification\r\n    setDataNotification(res);\r\n    setLoading(false); // set loadding\r\n    setIsModalVisible(false);\r\n    getData();\r\n  }\r\n\r\n  const pushDataJson = async () => {\r\n    let res = [];\r\n    await pushOnlinePracticejson(dataJson).then(data => {\r\n      console.log(data);\r\n      if (data.status===true) {\r\n        res.push({\r\n          content: `Add data success`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: data.status\r\n        })\r\n        toast.success('Add data success!', {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n      else {\r\n        res.push({\r\n          content: `Add data fail`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: data.status\r\n        })\r\n        toast.error(data.messages, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n    });\r\n    // set data notification\r\n    setDataNotification(res);\r\n    setLoading(false); // set loadding\r\n    setIsModalVisibleJS(false);\r\n    getData();\r\n  }\r\n\r\n  // notification\r\n  const openNotification = () => {\r\n    const args = {\r\n      message: 'Thông báo!!',\r\n      description:\r\n        'Vui lòng thêm đầy đủ các phần!!!',\r\n      duration: 0,\r\n    };\r\n    notification.open(args);\r\n  };\r\n  // show add \r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const showModalJS = () => {\r\n    setIsModalVisibleJS(true);\r\n  };\r\n  const handleOk = () => {\r\n    if (checkDataUpload) {\r\n      setLoading(true);\r\n      pushData();\r\n    }\r\n    else {\r\n      openNotification();\r\n    }\r\n  };\r\n  const handleOkJson = (values) => {\r\n    dataJson.title = values.title;\r\n    dataJson.decription = values.decription;\r\n\r\n    var date = new Date(values.time);\r\n    dataJson.time = date.getTime();\r\n    console.log('oke');\r\n    if (checkDataUpload) {\r\n      setLoading(true);\r\n      pushDataJson();\r\n    }\r\n    else {\r\n      openNotification();\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    if (!loading) {\r\n      setIsModalVisibleJS(false);\r\n      setIsModalVisible(false);\r\n    }\r\n  };\r\n  // select file\r\n  const selectFile = async (e, name) => {\r\n    UploadFile(e)\r\n      .then((data) => {\r\n        setDataUpdate(data);\r\n      })\r\n  }\r\n  const layout = {\r\n    labelCol: {\r\n      span: 4,\r\n    },\r\n    wrapperCol: {\r\n      span: 15,\r\n    },\r\n  };\r\n  // edit test\r\n  const handleOkEdit = () => {\r\n    if (dataUpdate !== '') {\r\n      updateData();\r\n    } else {\r\n      const args = {\r\n        message: 'Thông báo!!',\r\n        description:\r\n          'Vui lòng chọn file!!!',\r\n        duration: 0,\r\n      };\r\n      notification.open(args);\r\n    }\r\n    setLoadingEdit(true);\r\n\r\n\r\n  };\r\n  // cancel edit\r\n  const handleCancelEdit = () => {\r\n    setVisibleEdit(false);\r\n    setLoadingEdit(false);\r\n  };\r\n\r\n  // delete test\r\n  const handleOkDelete = async () => {\r\n    let res = [];\r\n    setLoadingDelete(true);\r\n    await removeDataOnline(valueUpdate)\r\n      .then(data => {\r\n        res.push({\r\n          content: `Remove data test ${valueUpdate.IDData} success`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: true\r\n        })\r\n\r\n      }).catch(() => {\r\n        res.push({\r\n          content: `Remove data ${valueUpdate.IDData} fail`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: false\r\n        })\r\n      })\r\n    setLoadingDelete(false);\r\n    setVisibleDelete(false);\r\n    setDataNotification(res);\r\n    getData();\r\n  };\r\n  // cancel delete test\r\n  const handleCancelDelete = () => {\r\n    setVisibleDelete(false);\r\n    setLoadingDelete(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    dataUpload.title = values.title;\r\n    dataUpload.decription = values.decription;\r\n\r\n    var date = new Date(values.time);\r\n    dataUpload.time = date.getTime();\r\n    if (checkDataUpload) {\r\n      setLoading(true);\r\n      pushData();\r\n    }\r\n    else {\r\n      openNotification();\r\n    }\r\n    // setIsModalVisible(false);\r\n\r\n  };\r\n  // change select  \r\n  function onChangeSelect(value) {\r\n    setSelectUpdate(value);\r\n  }\r\n\r\n  function range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n  function disabledDate(current) {\r\n    // Can not select days before today and today\r\n    return current && current < moment().endOf('day');\r\n  }\r\n\r\n  function disabledDateTime() {\r\n    return {\r\n      // disabledHours: () => range(0, 24).splice(4, 20),\r\n      // disabledMinutes: () => range(30, 60),\r\n      // disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n\r\n  const validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n      email: '${label} is not a valid email!',\r\n      number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n      range: '${label} must be between ${min} and ${max}',\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: loadingAnimation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>Up load data</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button type=\"primary\" shape=\"circle\" onClick={\r\n              () => {\r\n                setNameModal('Add Data');\r\n                showModal();\r\n              }} >\r\n              +\r\n            </Button>\r\n            <Button type=\"primary\" shape=\"circle\" onClick={\r\n              () => {\r\n                setNameModal('Add Data');\r\n                showModalJS();\r\n              }} >\r\n              *\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Modal\r\n          destroyOnClose={true}\r\n          visible={isModalVisible}\r\n          title={nameModal}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          footer={[\r\n          ]}\r\n        >\r\n          <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n            <Form.Item name={'title'} label=\"Title\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name={'decription'} label=\"Decription\" rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}>\r\n              <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item name={'time'} label=\"Time\" rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}>\r\n              <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                // disabledDate={disabledDate}\r\n                // disabledTime={disabledDateTime}\r\n                showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n              />\r\n            </Form.Item>\r\n\r\n            {\r\n              content.map((element) =>\r\n                <UploadFileView\r\n                  uploadFile={uploadFile}\r\n                  name={element.name}\r\n                  title={element.title} />\r\n              )\r\n            }\r\n\r\n            <Form.Item >\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\r\n          </Form>\r\n\r\n        </Modal>\r\n\r\n\r\n        <Modal\r\n          title=\"Edit\"\r\n          visible={visibleEdit}\r\n          onOk={handleOkEdit}\r\n          confirmLoading={loadingEdit}\r\n          onCancel={handleCancelEdit}\r\n        >\r\n          <div>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n              <text style={{ marginRight: 10 }}>Chọn mục:</text>\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select\"\r\n                optionFilterProp=\"children\"\r\n                onChange={onChangeSelect}\r\n                // onFocus={onFocus}\r\n                // onBlur={onBlur}\r\n                //onSearch={onSearch}\r\n                filterOption={(input, option) =>\r\n                  // option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                  console.log(input)\r\n                }\r\n              >\r\n                {content.map((element) =>\r\n                  <Option value={element.name}>{element.title}</Option>\r\n                )}\r\n              </Select>\r\n            </div>\r\n            <div style={{ flex: 1, marginTop: 20, paddingLeft: 75 }}>\r\n              <input type='file' name='file' id=\"input\" accept=\".xls,.xlsx\"\r\n                onChange={(e) => selectFile(e, selectUpdate)} />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <Modal\r\n          destroyOnClose={true}\r\n          visible={isModalVisibleJS}\r\n          title={nameModal}\r\n          onCancel={() => {\r\n            setIsModalVisibleJS(false)\r\n          }}\r\n          footer={[\r\n          ]}\r\n        >\r\n          <Form {...layout} name=\"nest-messages\" onFinish={handleOkJson} validateMessages={validateMessages}>\r\n            <Form.Item name={'title'} label=\"Title\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name={'decription'} label=\"Decription\" rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}>\r\n              <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item name={'time'} label=\"Time\" rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}>\r\n              <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                // disabledDate={disabledDate}\r\n                // disabledTime={disabledDateTime}\r\n                showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n              />\r\n            </Form.Item>\r\n            <UploadFileViewJson\r\n              uploadFile={() => {\r\n                dataJson = fullTest;\r\n              }\r\n\r\n              } />\r\n\r\n            <Form.Item >\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\r\n          </Form>\r\n\r\n        </Modal>\r\n        <Modal\r\n          destroyOnClose={true}\r\n          title=\"Thông báo\"\r\n          visible={visibleDelete}\r\n          onOk={handleOkDelete}\r\n          // confirmLoading={loadingDelete}\r\n          onCancel={handleCancelDelete}\r\n        >\r\n          <p>Bạn có chắc chắn muốn xóa đề {valueUpdate.IDData} không?</p>\r\n        </Modal>\r\n        {isLoad === true ? <Lottie options={defaultOptions}\r\n          height={200}\r\n          width={200} /> : <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          onRow={(record, rowIndex) => {\r\n            return {\r\n              onClick: event => {\r\n                setvalueUpdate(record)\r\n              },\r\n            };\r\n          }}\r\n        />}\r\n\r\n      </CardBody>\r\n      <ToastContainer />\r\n    </Card>\r\n  );\r\n}\r\n","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\UploadData.jsx",["368","369","370","371"],"import React, { useState, useEffect } from \"react\";\r\nimport { getCookie } from '../../controllers/localStorage';\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport XLSX from 'xlsx';\r\nimport UploadFileView from './UploadFileView/index.jsx';\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Tag, Select, Space, Button, Modal, notification } from \"antd\";\r\nimport moment from \"moment\";\r\nimport Lottie from 'react-lottie';\r\nimport loadingAnimation from '../../animation/loading.json';\r\n// api up data\r\nimport { pushFile, removeData, updateFile,checkTest } from '../../controllers/PushData';\r\nimport { element } from \"prop-types\";\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nlet datasetFile = [{\r\n  \"name\": \"jayanth\",\r\n  \"data\": \"scd\",\r\n  \"abc\": \"sdef\"\r\n}]\r\n\r\n\r\nlet content = [\r\n  {\r\n    name: 'part1',\r\n    title: 'Up load data part 1'\r\n  },\r\n  {\r\n    name: 'part2',\r\n    title: 'Up load data part 2'\r\n  },\r\n  {\r\n    name: 'part3',\r\n    title: 'Up load data part 3'\r\n  },\r\n  {\r\n    name: 'part4',\r\n    title: 'Up load data part 4'\r\n  },\r\n  {\r\n    name: 'part5',\r\n    title: 'Up load data part 5'\r\n  },\r\n  {\r\n    name: 'part6',\r\n    title: 'Up load data part 6'\r\n  },\r\n  {\r\n    name: 'part7',\r\n    title: 'Up load data part 7'\r\n  },\r\n  {\r\n    name: 'part3detail',\r\n    title: 'Up load data part 3 detail'\r\n  },\r\n  {\r\n    name: 'part4detail',\r\n    title: 'Up load data part 4 detail'\r\n  },\r\n  {\r\n    name: 'part6detail',\r\n    title: 'Up load data part 6 detail'\r\n  },\r\n  {\r\n    name: 'part7detail',\r\n    title: 'Up load data part 7 detail'\r\n  },\r\n  {\r\n    name: 'test',\r\n    title: 'Up load data test'\r\n  },\r\n\r\n]\r\nexport default function UploadData(props) {\r\n  const { setDataNotification } = props;\r\n  const classes = useStyles();\r\n  const [loadingEdit, setLoadingEdit] = React.useState(false);\r\n  const [loadingDelete, setLoadingDelete] = React.useState(false);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [selectUpdate, setSelectUpdate] = React.useState(''); // select part current\r\n  const [valueUpdate, setvalueUpdate] = React.useState('');\r\n  const [nameModal, setNameModal] = useState('Add');\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataUpdate, setDataUpdate] = React.useState([]);\r\n  const [visibleEdit, setVisibleEdit] = React.useState(false);  // load model edit\r\n  const [visibleDelete, setVisibleDelete] = React.useState(false);  // load model edit\r\n  // const [dataCurrent, setDataCurrent] = React.useState([]); // data current\r\n  const [isLoad, setLoad] = React.useState(true);\r\n  const { Option } = Select;\r\n  // columns\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"Name\",\r\n      key: \"Name\"\r\n    },\r\n    {\r\n      title: \"IDYear\",\r\n      dataIndex: \"IDYear\",\r\n      key: \"IDYear\"\r\n    },\r\n    {\r\n      title: \"IDTest\",\r\n      dataIndex: \"IDTest\",\r\n      key: \"IDTest\"\r\n    },\r\n    {\r\n      title: \"Buy\",\r\n      dataIndex: \"Buy\",\r\n      key: \"Buy\"\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <div style={{ width: 70, display: 'flex', paddingRight: 5 }}>\r\n          <Button type=\"primary\"\r\n            onClick={() => {\r\n\r\n              setNameModal('Update Data');\r\n              setVisibleEdit(true);\r\n            }}\r\n          >Update</Button>\r\n          <Button style={{ marginLeft: 10 }} type=\"primary\"\r\n            onClick={() => {\r\n              setVisibleDelete(true);\r\n            }}>Delete</Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // get test\r\n  const getData = async () => {\r\n    const HEADER = {\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors',\r\n        authorization: getCookie().token,\r\n      },\r\n    };\r\n    return await fetch(`${process.env.REACT_APP_API_URL}/database/test/`, HEADER)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let array = data.map(element => {\r\n          return {\r\n            Buy: element.Buy,\r\n            IDTest: element.IDTest,\r\n            IDYear: element.IDYear,\r\n            Name: element.Name,\r\n          }\r\n        })\r\n        array.sort(function (a, b) {\r\n          return a.IDTest - b.IDTest;\r\n        });\r\n        setData(array);\r\n        setLoad(false);\r\n      });\r\n  }\r\n  // name and data post database\r\n  const dataUpload = {\r\n    part1: [],\r\n    part2: [],\r\n    part3: [],\r\n    part4: [],\r\n    part5: [],\r\n    part6: [],\r\n    part7: [],\r\n    part3detail: [],\r\n    part4detail: [],\r\n    part6detail: [],\r\n    part7detail: [],\r\n    test: [],\r\n  }\r\n\r\n  // convert excel to json\r\n  const UploadFile = (e) => {\r\n    // console.log(e);\r\n    return new Promise((resolve, reject) => {\r\n      let selectedFile = e.target.files[0];\r\n      XLSX.utils.json_to_sheet(datasetFile, selectedFile.name);\r\n      if (selectedFile) {\r\n        let fileReader = new FileReader();\r\n        fileReader.readAsBinaryString(selectedFile);\r\n        fileReader.onload = (event) => {\r\n          let data = event.target.result;\r\n          let workbook = XLSX.read(data, { type: \"binary\" });\r\n          // console.log(workbook);\r\n          workbook.SheetNames.forEach(sheet => {\r\n            let rowObject = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheet]);\r\n            let result = JSON.stringify(rowObject, undefined, 4);\r\n            resolve(result);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  // set file \r\n  const uploadFile = async (e, name) => {\r\n    console.log(e);\r\n    switch (name) {\r\n      case 'part1': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part1 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part2': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part2 = data;\r\n          })\r\n        break;\r\n      } case 'part3': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part3 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part4': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part4 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part5': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part5 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part6': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part6 = data;\r\n          })\r\n        break;\r\n      } case 'part7': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part7 = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part3detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part3detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part4detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part4detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part6detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part6detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'part7detail': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.part7detail = data;\r\n          })\r\n        break;\r\n      }\r\n      case 'test': {\r\n        UploadFile(e)\r\n          .then((data) => {\r\n            dataUpload.test = data;\r\n          })\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // check data upload\r\n  const checkDataUpload = () => {\r\n    for (const property in dataUpload) {\r\n      if (property.length === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  const updateData = async () => {\r\n    let res = [];\r\n    console.log(dataUpdate)\r\n    await updateFile(dataUpdate, selectUpdate)\r\n      .then(data => {\r\n        updateFile(JSON.stringify({ IDYear: valueUpdate.IDYear, IDTest: valueUpdate.IDTest }), selectUpdate)\r\n          .then(data => {\r\n            console.log(data);\r\n          })\r\n        res.push({\r\n          content: `Update data ${selectUpdate} success`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: true\r\n        })\r\n      }).catch((error) => {\r\n        res.push({\r\n          content: `Update data ${selectUpdate} fail`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: false\r\n        })\r\n      });\r\n    setDataNotification(res);\r\n    setVisibleEdit(false);\r\n    setLoadingEdit(false);\r\n  }\r\n  // push data firebase\r\n  const pushData = async () => {\r\n    let res = [];\r\n    await checkTest(dataUpload.test).then(async(data)=>{\r\n      console.log(data);\r\n      if (data.status) {\r\n        for (const property in dataUpload) {\r\n          await pushFile(dataUpload[property], property)\r\n            .then(data => {\r\n              if (data.status) {\r\n                res.push({\r\n                  content: `Add data ${property} success`,\r\n                  date: moment().format('YYYY/MM/DD'),\r\n                  status: data.status\r\n                })\r\n              }\r\n              else {\r\n                res.push({\r\n                  content: `Add data ${property} fail`,\r\n                  date: moment().format('YYYY/MM/DD'),\r\n                  status: data.status\r\n                })\r\n              }\r\n            });\r\n        };\r\n        // set data notification\r\n        setDataNotification(res);\r\n        setLoading(false); // set loadding\r\n        setIsModalVisible(false);\r\n      } else {\r\n        res.push({\r\n          content: data.messages,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: data.status\r\n        })\r\n        setLoading(false); // set loadding\r\n      }\r\n    })\r\n  \r\n  }\r\n  // notification\r\n  const openNotification = () => {\r\n    const args = {\r\n      message: 'Thông báo!!',\r\n      description:\r\n        'Vui lòng thêm đầy đủ các phần!!!',\r\n      duration: 0,\r\n    };\r\n    notification.open(args);\r\n  };\r\n  // show add \r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const handleOk = () => {\r\n    if (checkDataUpload) {\r\n      setLoading(true);\r\n      pushData();\r\n    }\r\n    else {\r\n      openNotification();\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  // select file\r\n  const selectFile = async (e, name) => {\r\n    console.log(e);\r\n    UploadFile(e)\r\n      .then((data) => {\r\n        setDataUpdate(data);\r\n      })\r\n  }\r\n  // edit test\r\n  const handleOkEdit = () => {\r\n    if (dataUpdate !== '') {\r\n      updateData();\r\n    } else {\r\n      const args = {\r\n        message: 'Thông báo!!',\r\n        description:\r\n          'Vui lòng chọn file!!!',\r\n        duration: 0,\r\n      };\r\n      notification.open(args);\r\n    }\r\n    setLoadingEdit(true);\r\n\r\n\r\n  };\r\n  // cancel edit\r\n  const handleCancelEdit = () => {\r\n    setVisibleEdit(false);\r\n    setLoadingEdit(false);\r\n  };\r\n\r\n  // delete test\r\n  const handleOkDelete = async () => {\r\n    let res = [];\r\n    setLoadingDelete(true);\r\n    await removeData(valueUpdate)\r\n      .then(data => {\r\n        res.push({\r\n          content: `Remove data test ${valueUpdate.IDTest} year ${valueUpdate.IDYear} success`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: true\r\n        })\r\n\r\n      }).catch(() => {\r\n        res.push({\r\n          content: `Remove data ${valueUpdate.IDTest} year ${valueUpdate.IDYear} fail`,\r\n          date: moment().format('YYYY/MM/DD'),\r\n          status: false\r\n        })\r\n      })\r\n    setLoadingDelete(false);\r\n    setVisibleDelete(false);\r\n    setDataNotification(res);\r\n    getData();\r\n  };\r\n  // cancel delete test\r\n  const handleCancelDelete = () => {\r\n    setVisibleDelete(false);\r\n    setLoadingDelete(false);\r\n  };\r\n  // change select  \r\n  function onChangeSelect(value) {\r\n    console.log(value);\r\n    setSelectUpdate(value);\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: loadingAnimation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>Up load data</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button type=\"primary\" shape=\"circle\" onClick={\r\n              () => {\r\n                setNameModal('Add Data');\r\n                showModal();\r\n              }} >\r\n              +\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Modal\r\n          destroyOnClose={true}\r\n          visible={isModalVisible}\r\n          title={nameModal}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n              Up load\r\n            </Button>,\r\n          ]}\r\n        >\r\n          {\r\n            content.map((element) =>\r\n              <UploadFileView\r\n                uploadFile={uploadFile}\r\n                name={element.name}\r\n                title={element.title} />\r\n            )\r\n          }\r\n        </Modal>\r\n        <Modal\r\n          destroyOnClose={true}\r\n          title=\"Edit\"\r\n          visible={visibleEdit}\r\n          onOk={handleOkEdit}\r\n          confirmLoading={loadingEdit}\r\n          onCancel={handleCancelEdit}\r\n        >\r\n          <div>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n              <text style={{ marginRight: 10 }}>Chọn mục:</text>\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select\"\r\n                optionFilterProp=\"children\"\r\n                onChange={onChangeSelect}\r\n                // onFocus={onFocus}\r\n                // onBlur={onBlur}\r\n                //onSearch={onSearch}\r\n                filterOption={(input, option) =>\r\n                  // option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                  console.log(input)\r\n                }\r\n              >\r\n                {content.map((element) =>\r\n                  <Option value={element.name}>{element.title}</Option>\r\n                )}\r\n              </Select>\r\n            </div>\r\n            <div style={{ flex: 1, marginTop: 20, paddingLeft: 75 }}>\r\n              <input type='file' name='file' id=\"input\" accept=\".xls,.xlsx\"\r\n                onChange={(e) => selectFile(e, selectUpdate)} />\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <Modal\r\n          title=\"Thông báo\"\r\n          visible={visibleDelete}\r\n          onOk={handleOkDelete}\r\n          confirmLoading={loadingDelete}\r\n          onCancel={handleCancelDelete}\r\n        >\r\n          <p>Bạn có chắc chắn muốn xóa đề {valueUpdate.IDTest} năm {valueUpdate.IDYear} không?</p>\r\n        </Modal>\r\n        {isLoad === true ? <Lottie options={defaultOptions}\r\n          height={200}\r\n          width={200} /> : <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          onRow={(record, rowIndex) => {\r\n            return {\r\n              onClick: event => {\r\n                setvalueUpdate(record)\r\n              },\r\n            };\r\n          }}\r\n        />}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Profile.jsx",["372","373","374"],"import React, { useState,useEffect } from 'react';\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport GridItem from \"./Grid/GridItem.jsx\";\r\nimport GridContainer from \"./Grid/GridContainer.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport ProfileForm from './ProfileForm';\r\nimport {notification } from \"antd\";\r\n\r\nconst styles = {\r\n    typo: {\r\n        paddingLeft: \"25%\",\r\n        marginBottom: \"40px\",\r\n        position: \"relative\"\r\n    },\r\n    note: {\r\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n        bottom: \"10px\",\r\n        color: \"#c0c1c2\",\r\n        display: \"block\",\r\n        fontWeight: \"400\",\r\n        fontSize: \"13px\",\r\n        lineHeight: \"13px\",\r\n        left: \"0\",\r\n        marginLeft: \"20px\",\r\n        position: \"absolute\",\r\n        width: \"260px\"\r\n    },\r\n    cardCategoryWhite: {\r\n        color: \"rgba(255,255,255,.62)\",\r\n        margin: \"0\",\r\n        fontSize: \"14px\",\r\n        marginTop: \"0\",\r\n        marginBottom: \"0\"\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\"\r\n    }\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function Profile() {\r\n    const classes = useStyles();\r\n   \r\n    return (\r\n        <GridContainer>\r\n            <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <div style={{ display: \"flex\", }}>\r\n                            <div style={{ flex: 1 }} >\r\n                                <h4 className={classes.cardTitleWhite}>Profile</h4>\r\n                                {/* <p className={classes.cardCategoryWhite}>\r\n                                    \r\n                                </p> */}\r\n                            </div>\r\n                            <div style={{ flex: 1 }}>\r\n                            </div>\r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <ProfileForm />                \r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>\r\n        </GridContainer>\r\n    );\r\n}\r\n","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\ListUserAdmin.jsx",["375"],"import React, { useState, useEffect } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Button, Modal, notification } from \"antd\";\r\nimport { getCookie, signout1 } from '../../controllers/localStorage';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport loading from '../../animation/loading.json';\r\n\r\nimport AddAdminForm from './AddAdminForm';\r\nconst styles = {\r\n  typo: {\r\n    paddingLeft: \"25%\",\r\n    marginBottom: \"40px\",\r\n    position: \"relative\"\r\n  },\r\n  note: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    bottom: \"10px\",\r\n    color: \"#c0c1c2\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"13px\",\r\n    lineHeight: \"13px\",\r\n    left: \"0\",\r\n    marginLeft: \"20px\",\r\n    position: \"absolute\",\r\n    width: \"260px\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nexport default function UploadData() {\r\n\r\n  const classes = useStyles();\r\n  const [visibleEdit, setVisibleEdit] = React.useState(false);  // load model edit admin\r\n  const [isModalVisible, setIsModalVisible] = useState(false); // load model add admin\r\n  const [loadingAdd, setLoadingAdd] = React.useState(false);\r\n  const [loadingEdit, setLoadingEdit] = React.useState(false);\r\n  const [adminCurrent, setAdminCurrent] = React.useState([]); // admin current\r\n  const [modalText, setModalText] = React.useState('Bạn có chắc chắn muốn disable admin không?'); // model edit admin\r\n  const [reload, setReload] = React.useState(true) // reload\r\n  const [data, setData] = React.useState([]); // data\r\n  const [isLoad, setLoad] = React.useState(true); // data\r\n  // input add user admin\r\n\r\n  // get list admin\r\n  const getData = async () => {\r\n    const HEADER = {\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors',\r\n        authorization: getCookie().token,\r\n      },\r\n    };\r\n    console.log('=====>', getCookie().token);\r\n    return await fetch(`${process.env.REACT_APP_API_URL}/users/admin`, HEADER)\r\n      .then(response => response.json())\r\n      .then(dataget => {\r\n        console.log('sdasdasdasd--->', dataget);\r\n        if (dataget.status) {\r\n          let array = dataget.data.map(element => {\r\n            return {\r\n              id: element.id,\r\n              name: element.displayName,\r\n              email: element.email,\r\n              status: element.status?.toString(),\r\n            }\r\n          })\r\n          setLoad(false);\r\n          setData(array);\r\n        } else {\r\n          signout1();\r\n        }\r\n\r\n      });\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\"\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\"\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\"\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    getData();\r\n  }, [reload])\r\n\r\n  // show modal admin\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  // ok add admin\r\n  const handleOk = (values) => {\r\n    signUp(values)\r\n      .then(data => {\r\n        if (data.status === true) {\r\n          openNotification(data.messages);\r\n          setReload(!reload);\r\n        }\r\n        else {\r\n          openNotification(data.messages);\r\n        }\r\n      });\r\n    setIsModalVisible(false);\r\n  };\r\n  // notication add admin\r\n  const openNotification = (content) => {\r\n    const args = {\r\n      message: 'Thông báo!!',\r\n      description: content,\r\n      duration: 0,\r\n    };\r\n    notification.open(args);\r\n  };\r\n  // cancel admin\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  // add admin\r\n  const signUp = async (values) => {\r\n    return new Promise((resolve, reject) => {\r\n      const HEADER = {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors',\r\n        authorization: getCookie().token,\r\n      };\r\n      fetch(`${process.env.REACT_APP_API_URL}/users/admin`, {\r\n        method: 'POST',\r\n        headers: HEADER,\r\n        body: JSON.stringify({\r\n          username: values.username,\r\n          email: values.email,\r\n          password: values.confirm,\r\n          phone: values.phone\r\n        }),\r\n      }).then(response => response.json())\r\n        .then((data) => {\r\n          resolve(data);\r\n        }).catch((erro) => { reject('erro') })\r\n    });\r\n  }\r\n  // api edit admin\r\n  const editAdmin = async () => {\r\n    let query = `${process.env.REACT_APP_API_URL}/users/admin_disable/${adminCurrent.id}`;\r\n    if (adminCurrent.status === 'false') {\r\n      query = `${process.env.REACT_APP_API_URL}/users/admin_enable/${adminCurrent.id}`;\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      fetch(query, {\r\n        method: 'PUT',\r\n        headers: {\r\n          Accept: 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': \"*\",\r\n          mode: 'no-cors',\r\n          authorization: getCookie().token,\r\n        },\r\n        body: JSON.stringify({\r\n        }),\r\n      }).then((data) => {\r\n        setLoadingEdit(false);\r\n        setReload(!reload);\r\n        resolve(data);\r\n      })\r\n    });\r\n  }\r\n  // edit admin\r\n  const handleOkEdit = () => {\r\n    setLoadingEdit(true);\r\n    editAdmin();\r\n    setVisibleEdit(false);\r\n  };\r\n  // cancel edit\r\n  const handleCancelEdit = () => {\r\n    setVisibleEdit(false);\r\n    setLoadingEdit(false);\r\n  };\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: loading,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flex: 1 }}>\r\n            <h4 className={classes.cardTitleWhite}>List admin</h4>\r\n          </div>\r\n          <div style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end', display: 'flex' }}>\r\n            <Button onClick={\r\n              showModal\r\n            } type=\"primary\" >Add admin</Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Modal title=\"Add data\" visible={isModalVisible} confirmLoading={loadingAdd} footer={null} onCancel={handleCancel}>\r\n          <AddAdminForm handleOk={handleOk} />\r\n        </Modal>\r\n        <Modal\r\n          destroyOnClose={true}\r\n          title=\"Thông báo\"\r\n          visible={visibleEdit}\r\n          onOk={handleOkEdit}\r\n          confirmLoading={loadingEdit}\r\n          onCancel={handleCancelEdit}\r\n        >\r\n          <p>{modalText}</p>\r\n        </Modal>\r\n        {isLoad === true ? <Lottie options={defaultOptions}\r\n          height={200}\r\n          width={200} /> : <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          onRow={(record, rowIndex) => {\r\n            return {\r\n              onDoubleClick: event => {\r\n                setAdminCurrent(data[rowIndex]);\r\n                if (data[rowIndex].status === \"true\") {\r\n                  setModalText('Bạn có chắc chắn muốn disable admin không?');\r\n                } else {\r\n                  setModalText('Bạn có chắc chắn muốn enable admin không?');\r\n                }\r\n                setVisibleEdit(true);\r\n              }, // double click row           \r\n            };\r\n          }}\r\n        />}\r\n\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\ListUser.jsx",["376","377","378","379","380","381"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridItem from \"./Grid/GridItem.jsx\";\r\nimport GridContainer from \"./Grid/GridContainer.jsx\";\r\nimport Table from \"./Table/Table.jsx\";\r\nimport Card from \"./Card/Card.jsx\";\r\nimport CardHeader from \"./Card/CardHeader.jsx\";\r\nimport CardBody from \"./Card/CardBody.jsx\";\r\n\r\nimport Lottie from 'react-lottie';\r\nimport loading from '../../animation/loading.json';\r\n// antd library\r\nimport { Tag, Space, Button, Modal, Empty } from \"antd\";\r\nimport { getCookie } from '../../controllers/localStorage';\r\n\r\nconst styles = {\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ListUser() {\r\n    const classes = useStyles();\r\n    const [reload, setReload] = React.useState(true)\r\n    const [data, setData] = React.useState([]);\r\n    // input add user admin\r\n    const [isModalVisible, setIsModalVisible] = useState(false); // set is model\r\n\r\n    const [isLoad, setLoad] = React.useState(true); // data\r\n    // reload\r\n    const reaLoad = () => {\r\n        getData();\r\n        setReload(!reload);\r\n    }\r\n    // get list user\r\n    const getData = async () => {\r\n        const HEADER = {\r\n            headers: {\r\n                Accept: 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                mode: 'no-cors',\r\n                authorization: getCookie().token,\r\n            },\r\n        };\r\n        return await fetch(`${process.env.REACT_APP_API_URL}/users/`, HEADER)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let array = data.map(element => {\r\n                    return {\r\n                        id: element.uid,\r\n                        name: element.displayName,\r\n                        email: element.email,\r\n                        status: element.islogin,\r\n                        // expirationDate: element.expirationDate,\r\n                        // package: element.package,\r\n                    }\r\n                })\r\n                setData(array);\r\n                setLoad(false);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: loading,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n      };\r\n    return (\r\n        <GridContainer>\r\n            <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <div style={{ display: \"flex\", }}>\r\n                            <div style={{ flex: 1 }} >\r\n                                <h4 className={classes.cardTitleWhite}>List user</h4>\r\n                                <p className={classes.cardCategoryWhite}>\r\n                                    User management\r\n                                </p>\r\n                            </div>\r\n                            <div style={{ flex: 1 }}>\r\n                            </div>\r\n                        </div>\r\n                    </CardHeader>\r\n                    {isLoad === true ? <CardBody><Lottie options={defaultOptions}\r\n                        height={200}\r\n                        width={200} /></CardBody> : <CardBody>\r\n                        {data.length > 0 ? <Table\r\n                            tableHeaderColor=\"primary\"\r\n                            tableHead={['id', 'name', 'email', 'disabled']}\r\n                            tableData={data}\r\n                            reaLoad={reaLoad}\r\n                        /> : <Empty />}\r\n                    </CardBody>}\r\n\r\n                </Card>\r\n            </GridItem>\r\n        </GridContainer>\r\n    );\r\n}\r\n","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\firebase\\firebase-confix.js",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\UploadFileView\\index.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Grid\\GridItem.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Grid\\GridContainer.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Card\\CardHeader.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Card\\Card.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Table\\Table.jsx",["382","383"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n// dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { element } from \"prop-types\";\r\nimport { getCookie } from '../../../controllers/localStorage';\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function CustomTable(props) {\r\n  const classes = useStyles();\r\n  const { tableHead, tableData, tableHeaderColor, reaLoad } = props;\r\n  const [data, setData] = React.useState([]);;\r\n  const [open, setOpen] = React.useState(false);  // open dialog\r\n  const [id, setID] = React.useState('');  // id user\r\n  const [value, setValue] = React.useState(''); //item vua chon\r\n  const handleClickOpen = (item) => { // set id user, open dialog\r\n    setValue(item);\r\n    setID(item[0]);\r\n    setOpen(true);\r\n  };\r\n  const HEADER = {\r\n    Accept: 'application/json, text/plain, */*',\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': \"*\",\r\n    mode: 'no-cors',\r\n    authorization: getCookie().token,\r\n  };\r\n  const deleteUser = async () => {\r\n    return await fetch(`${process.env.REACT_APP_API_URL}/users/disable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: HEADER,\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const enableUser = async () => {\r\n    return await fetch(`${process.env.REACT_APP_API_URL}/users/enable/${value.id}`, {\r\n      method: 'PUT',\r\n      headers: HEADER,\r\n    }).then(() => {\r\n      reaLoad();\r\n    });\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleAgree = () => {\r\n    //console.log(value.id);\r\n    if (value.status) {\r\n      deleteUser();\r\n    } else enableUser();\r\n    setOpen(false);\r\n  }\r\n  useEffect(() => {\r\n    setData(tableData);\r\n    return () => {\r\n    }\r\n  }, [tableData])\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n\r\n      <Dialog // dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{value.status === \"true\" ? \"Bạn có chắc chắc disable user không\" : \"Bạn có chắc chắn enable user không?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {id}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\"\r\n            onClick={() =>\r\n              handleClose()\r\n            }>\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus\r\n            onClick={() =>\r\n              handleAgree()\r\n            }>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Table className={classes.table}>\r\n        {tableHead !== undefined ? (\r\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\r\n            <TableRow className={classes.tableHeadRow}>\r\n              {tableHead?.map((prop, key) => {\r\n                return (\r\n                  <TableCell\r\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                    key={key}\r\n                  >\r\n                    {prop}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n              <TableCell\r\n                className={classes.tableCell + \" \" + classes.tableHeadCell}>\r\n                {'option'}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n        ) : null}\r\n        <TableBody>\r\n          {data?.map((prop, key) => {\r\n            return (\r\n              <TableRow key={key} className={classes.tableBodyRow} style={{}}>\r\n                {Object.values(prop)?.map((prop, key) => {\r\n                  return (\r\n                    <TableCell className={classes.tableCell} key={key} >\r\n                      {prop?.toString()}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n                <div>\r\n\r\n                  <TableCell style={{ color: 'red' }}\r\n                    onClick={() => handleClickOpen(prop)}>\r\n                    {prop.status ? 'disable' : 'enable'}\r\n                  </TableCell>\r\n                </div>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\nCustomTable.defaultProps = {\r\n  tableHeaderColor: \"gray\"\r\n};\r\nCustomTable.propTypes = {\r\n  tableHeaderColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  tableHead: PropTypes.arrayOf(PropTypes.string),\r\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\r\n};\r\n","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Card\\CardBody.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\Noti\\index.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\controllers\\PushData.js",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\ProfileForm\\index.jsx",["384","385","386","387","388","389","390"],"import React, { useEffect, useState } from 'react';\r\nimport { getLocalStorage } from '../../../controllers/localStorage';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  notification,\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { set } from 'js-cookie';\r\n\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nconst get = async () => {\r\n  return new Promise((resolve) => {\r\n    let user = getLocalStorage('user');\r\n    resolve(JSON.parse(user));\r\n  })\r\n}\r\nconst ProfileForm = () => {\r\n  const [form] = Form.useForm();\r\n  const [dataAdmin, setDataAdmin] = useState({});\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      get().then(data=>{\r\n        form.setFieldsValue({\r\n          name: data.name,\r\n          email: data.email,\r\n          phone: data.phonenumber,\r\n          username: 'admin',\r\n          prefix: \"84\",\r\n        });\r\n      })\r\n    }\r\n    func();\r\n}, []);\r\n\r\n// update profile\r\nconst updateProfile = async (values) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`https://toeic-seb.herokuapp.com/admin/update/${values.id}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': \"*\",\r\n        mode: 'no-cors'\r\n      },\r\n      body: JSON.stringify({\r\n        username: values.username,\r\n        email: values.email,\r\n        password: values.confirm,\r\n        phone: values.phone\r\n      }),\r\n    }).then((data) => {\r\n      resolve(data.json);\r\n    })\r\n  });\r\n}\r\nconst handleOk = (values) => {\r\n  updateProfile(values)\r\n    .then(data => {\r\n      if (data.status) {\r\n        openNotification('Update thông tin thành công.');\r\n      }\r\n      else {\r\n        openNotification('Update thông tin thất bại!!');\r\n      }\r\n    });\r\n};\r\nconst openNotification = (content) => {\r\n  const args = {\r\n    message: 'Thông báo!!',\r\n    description: content,\r\n    duration: 0,\r\n  };\r\n  notification.open(args);\r\n};\r\nconst onFinish = (values) => {\r\n  handleOk(values);\r\n};\r\nconst prefixSelector = (\r\n  <Form.Item name=\"prefix\" noStyle>\r\n    <Select\r\n      style={{\r\n        width: 70,\r\n      }}\r\n    >\r\n      <Option key=\"84\" value=\"84\">+84</Option>\r\n      <Option key=\"86\" value=\"86\">+86</Option>\r\n      <Option key=\"89\" value=\"89\">+89</Option>\r\n    </Select>\r\n  </Form.Item>\r\n);\r\nreturn (\r\n  <Form\r\n    {...formItemLayout}\r\n    form={form}\r\n    name=\"register\"\r\n    onFinish={onFinish}\r\n    //initialValues={dataAdmin}\r\n    scrollToFirstError\r\n    style={{ width: 1000 }}\r\n  >\r\n    <Form.Item\r\n      name=\"email\"\r\n      label=\"E-mail\"\r\n      rules={[\r\n        {\r\n          type: 'email',\r\n          message: 'The input is not valid E-mail!',\r\n        },\r\n        {\r\n          required: true,\r\n          message: 'Please input your E-mail!',\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n    {console.log(dataAdmin)}\r\n    <Form.Item\r\n      name=\"username\"\r\n      label={\r\n        <span>\r\n          UserName&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n            <QuestionCircleOutlined />\r\n          </Tooltip>\r\n        </span>\r\n      }\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your nickname!',\r\n          whitespace: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n    <Form.Item\r\n      name=\"password\"\r\n      label=\"Password\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your password!',\r\n        },\r\n      ]}\r\n      hasFeedback\r\n    >\r\n      <Input.Password />\r\n    </Form.Item>\r\n    <Form.Item\r\n      name=\"confirm\"\r\n      label=\"Confirm Password\"\r\n      dependencies={['password']}\r\n      hasFeedback\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please confirm your password!',\r\n        },\r\n        ({ getFieldValue }) => ({\r\n          validator(rule, value) {\r\n            if (!value || getFieldValue('password') === value) {\r\n              return Promise.resolve();\r\n            }\r\n            return Promise.reject('The two passwords that you entered do not match!');\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <Input.Password />\r\n    </Form.Item>\r\n    <Form.Item\r\n      name=\"phone\"\r\n      label=\"Phone Number\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your phone number!',\r\n        },\r\n      ]}\r\n    >\r\n      <Input\r\n        addonBefore={prefixSelector}\r\n        style={{\r\n          width: '100%',\r\n        }}\r\n      />\r\n    </Form.Item>\r\n    <Form.Item {...tailFormItemLayout}>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Update\r\n        </Button>\r\n    </Form.Item>\r\n  </Form>\r\n);\r\n};\r\n\r\nexport default ProfileForm","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\AddAdminForm\\index.jsx",["391","392","393"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Select,\r\n    Button,\r\n    notification\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst ProfileForm = (props) => {\r\n    const {handleOk} = props;\r\n    const [form] = Form.useForm();\r\n    const [reload, setReload] = useState(false);\r\n    const onFinish = (values) => {\r\n        handleOk(values);\r\n      \r\n    };\r\n \r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"86\">+86</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    \r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"username\"\r\n                label={\r\n                    <span>\r\n                        UserName&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n                            <QuestionCircleOutlined />\r\n                        </Tooltip>\r\n                    </span>\r\n                }\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your nickname!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your phone number!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    addonBefore={prefixSelector}\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Add admin\r\n        </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ProfileForm","F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react.js",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\UploadFileView\\json.jsx",[],"F:\\toeic seb\\web admin\\deloy\\web\\web_admin\\web\\src\\views\\Components\\UploadFileView\\excel.jsx",[],{"ruleId":"394","severity":1,"message":"395","line":18,"column":10,"nodeType":"396","messageId":"397","endLine":18,"endColumn":24},{"ruleId":"394","severity":1,"message":"398","line":19,"column":18,"nodeType":"396","messageId":"397","endLine":19,"endColumn":27},{"ruleId":"394","severity":1,"message":"399","line":20,"column":8,"nodeType":"396","messageId":"397","endLine":20,"endColumn":13},{"ruleId":"394","severity":1,"message":"400","line":32,"column":24,"nodeType":"396","messageId":"397","endLine":32,"endColumn":31},{"ruleId":"394","severity":1,"message":"401","line":38,"column":10,"nodeType":"396","messageId":"397","endLine":38,"endColumn":14},{"ruleId":"394","severity":1,"message":"402","line":38,"column":16,"nodeType":"396","messageId":"397","endLine":38,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":53,"column":6,"nodeType":"405","endLine":53,"endColumn":8,"suggestions":"406"},{"ruleId":"407","severity":1,"message":"408","line":171,"column":28,"nodeType":"409","endLine":171,"endColumn":48},{"ruleId":"394","severity":1,"message":"399","line":3,"column":8,"nodeType":"396","messageId":"397","endLine":3,"endColumn":13},{"ruleId":"394","severity":1,"message":"399","line":4,"column":8,"nodeType":"396","messageId":"397","endLine":4,"endColumn":13},{"ruleId":"394","severity":1,"message":"410","line":9,"column":8,"nodeType":"396","messageId":"397","endLine":9,"endColumn":17},{"ruleId":"394","severity":1,"message":"411","line":11,"column":10,"nodeType":"396","messageId":"397","endLine":11,"endColumn":13},{"ruleId":"394","severity":1,"message":"412","line":11,"column":15,"nodeType":"396","messageId":"397","endLine":11,"endColumn":20},{"ruleId":"394","severity":1,"message":"413","line":11,"column":22,"nodeType":"396","messageId":"397","endLine":11,"endColumn":28},{"ruleId":"394","severity":1,"message":"414","line":11,"column":30,"nodeType":"396","messageId":"397","endLine":11,"endColumn":35},{"ruleId":"394","severity":1,"message":"415","line":51,"column":12,"nodeType":"396","messageId":"397","endLine":51,"endColumn":26},{"ruleId":"394","severity":1,"message":"416","line":51,"column":28,"nodeType":"396","messageId":"397","endLine":51,"endColumn":45},{"ruleId":"394","severity":1,"message":"411","line":9,"column":17,"nodeType":"396","messageId":"397","endLine":9,"endColumn":20},{"ruleId":"394","severity":1,"message":"412","line":9,"column":22,"nodeType":"396","messageId":"397","endLine":9,"endColumn":27},{"ruleId":"394","severity":1,"message":"399","line":10,"column":8,"nodeType":"396","messageId":"397","endLine":10,"endColumn":13},{"ruleId":"394","severity":1,"message":"417","line":59,"column":22,"nodeType":"396","messageId":"397","endLine":59,"endColumn":35},{"ruleId":"394","severity":1,"message":"411","line":12,"column":17,"nodeType":"396","messageId":"397","endLine":12,"endColumn":20},{"ruleId":"394","severity":1,"message":"412","line":12,"column":30,"nodeType":"396","messageId":"397","endLine":12,"endColumn":35},{"ruleId":"394","severity":1,"message":"418","line":16,"column":3,"nodeType":"396","messageId":"397","endLine":16,"endColumn":16},{"ruleId":"394","severity":1,"message":"419","line":16,"column":18,"nodeType":"396","messageId":"397","endLine":16,"endColumn":31},{"ruleId":"394","severity":1,"message":"420","line":20,"column":10,"nodeType":"396","messageId":"397","endLine":20,"endColumn":17},{"ruleId":"421","severity":1,"message":"422","line":246,"column":5,"nodeType":"423","messageId":"424","endLine":329,"endColumn":6},{"ruleId":"394","severity":1,"message":"425","line":1,"column":17,"nodeType":"396","messageId":"397","endLine":1,"endColumn":25},{"ruleId":"394","severity":1,"message":"426","line":1,"column":26,"nodeType":"396","messageId":"397","endLine":1,"endColumn":35},{"ruleId":"394","severity":1,"message":"427","line":11,"column":9,"nodeType":"396","messageId":"397","endLine":11,"endColumn":21},{"ruleId":"394","severity":1,"message":"426","line":1,"column":27,"nodeType":"396","messageId":"397","endLine":1,"endColumn":36},{"ruleId":"394","severity":1,"message":"399","line":12,"column":8,"nodeType":"396","messageId":"397","endLine":12,"endColumn":13},{"ruleId":"394","severity":1,"message":"428","line":55,"column":9,"nodeType":"396","messageId":"397","endLine":55,"endColumn":19},{"ruleId":"429","severity":1,"message":"430","line":146,"column":15,"nodeType":"431","messageId":"432","endLine":146,"endColumn":38},{"ruleId":"429","severity":1,"message":"430","line":148,"column":14,"nodeType":"431","messageId":"432","endLine":148,"endColumn":46},{"ruleId":"429","severity":1,"message":"430","line":149,"column":15,"nodeType":"431","messageId":"432","endLine":149,"endColumn":48},{"ruleId":"429","severity":1,"message":"430","line":152,"column":14,"nodeType":"431","messageId":"432","endLine":152,"endColumn":58},{"ruleId":"394","severity":1,"message":"433","line":8,"column":3,"nodeType":"396","messageId":"397","endLine":8,"endColumn":11},{"ruleId":"394","severity":1,"message":"434","line":10,"column":3,"nodeType":"396","messageId":"397","endLine":10,"endColumn":6},{"ruleId":"394","severity":1,"message":"435","line":11,"column":3,"nodeType":"396","messageId":"397","endLine":11,"endColumn":6},{"ruleId":"394","severity":1,"message":"436","line":12,"column":3,"nodeType":"396","messageId":"397","endLine":12,"endColumn":11},{"ruleId":"394","severity":1,"message":"437","line":17,"column":10,"nodeType":"396","messageId":"397","endLine":17,"endColumn":13},{"ruleId":"394","severity":1,"message":"438","line":58,"column":21,"nodeType":"396","messageId":"397","endLine":58,"endColumn":33},{"ruleId":"403","severity":1,"message":"439","line":72,"column":4,"nodeType":"405","endLine":72,"endColumn":6,"suggestions":"440"},{"ruleId":"394","severity":1,"message":"420","line":19,"column":10,"nodeType":"396","messageId":"397","endLine":19,"endColumn":17},{"ruleId":"441","severity":1,"message":"442","line":96,"column":13,"nodeType":"443","messageId":"444","endLine":98,"endColumn":14},{"ruleId":"394","severity":1,"message":"427","line":9,"column":5,"nodeType":"396","messageId":"397","endLine":9,"endColumn":17},{"ruleId":"394","severity":1,"message":"445","line":47,"column":12,"nodeType":"396","messageId":"397","endLine":47,"endColumn":18},{"ruleId":"394","severity":1,"message":"446","line":47,"column":20,"nodeType":"396","messageId":"397","endLine":47,"endColumn":29},{"ruleId":"394","severity":1,"message":"411","line":12,"column":17,"nodeType":"396","messageId":"397","endLine":12,"endColumn":20},{"ruleId":"394","severity":1,"message":"412","line":12,"column":30,"nodeType":"396","messageId":"397","endLine":12,"endColumn":35},{"ruleId":"394","severity":1,"message":"418","line":16,"column":3,"nodeType":"396","messageId":"397","endLine":16,"endColumn":16},{"ruleId":"394","severity":1,"message":"419","line":16,"column":18,"nodeType":"396","messageId":"397","endLine":16,"endColumn":31},{"ruleId":"394","severity":1,"message":"447","line":19,"column":10,"nodeType":"396","messageId":"397","endLine":19,"endColumn":18},{"ruleId":"394","severity":1,"message":"448","line":19,"column":20,"nodeType":"396","messageId":"397","endLine":19,"endColumn":30},{"ruleId":"394","severity":1,"message":"420","line":20,"column":10,"nodeType":"396","messageId":"397","endLine":20,"endColumn":17},{"ruleId":"394","severity":1,"message":"449","line":118,"column":10,"nodeType":"396","messageId":"397","endLine":118,"endColumn":23},{"ruleId":"421","severity":1,"message":"422","line":249,"column":5,"nodeType":"423","messageId":"424","endLine":325,"endColumn":6},{"ruleId":"394","severity":1,"message":"450","line":511,"column":12,"nodeType":"396","messageId":"397","endLine":511,"endColumn":17},{"ruleId":"394","severity":1,"message":"451","line":518,"column":12,"nodeType":"396","messageId":"397","endLine":518,"endColumn":24},{"ruleId":"394","severity":1,"message":"452","line":523,"column":12,"nodeType":"396","messageId":"397","endLine":523,"endColumn":28},{"ruleId":"429","severity":1,"message":"430","line":532,"column":15,"nodeType":"431","messageId":"432","endLine":532,"endColumn":38},{"ruleId":"429","severity":1,"message":"430","line":534,"column":14,"nodeType":"431","messageId":"432","endLine":534,"endColumn":46},{"ruleId":"429","severity":1,"message":"430","line":535,"column":15,"nodeType":"431","messageId":"432","endLine":535,"endColumn":48},{"ruleId":"429","severity":1,"message":"430","line":538,"column":14,"nodeType":"431","messageId":"432","endLine":538,"endColumn":58},{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","replacedBy":"456"},{"ruleId":"394","severity":1,"message":"395","line":18,"column":10,"nodeType":"396","messageId":"397","endLine":18,"endColumn":24},{"ruleId":"394","severity":1,"message":"398","line":19,"column":18,"nodeType":"396","messageId":"397","endLine":19,"endColumn":27},{"ruleId":"394","severity":1,"message":"399","line":20,"column":8,"nodeType":"396","messageId":"397","endLine":20,"endColumn":13},{"ruleId":"394","severity":1,"message":"400","line":32,"column":24,"nodeType":"396","messageId":"397","endLine":32,"endColumn":31},{"ruleId":"394","severity":1,"message":"401","line":38,"column":10,"nodeType":"396","messageId":"397","endLine":38,"endColumn":14},{"ruleId":"394","severity":1,"message":"402","line":38,"column":16,"nodeType":"396","messageId":"397","endLine":38,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":53,"column":6,"nodeType":"405","endLine":53,"endColumn":8,"suggestions":"457"},{"ruleId":"407","severity":1,"message":"408","line":171,"column":28,"nodeType":"409","endLine":171,"endColumn":48},{"ruleId":"394","severity":1,"message":"399","line":4,"column":8,"nodeType":"396","messageId":"397","endLine":4,"endColumn":13},{"ruleId":"394","severity":1,"message":"426","line":1,"column":27,"nodeType":"396","messageId":"397","endLine":1,"endColumn":36},{"ruleId":"394","severity":1,"message":"399","line":12,"column":8,"nodeType":"396","messageId":"397","endLine":12,"endColumn":13},{"ruleId":"394","severity":1,"message":"428","line":55,"column":9,"nodeType":"396","messageId":"397","endLine":55,"endColumn":19},{"ruleId":"429","severity":1,"message":"430","line":152,"column":15,"nodeType":"431","messageId":"432","endLine":152,"endColumn":38},{"ruleId":"429","severity":1,"message":"430","line":154,"column":14,"nodeType":"431","messageId":"432","endLine":154,"endColumn":46},{"ruleId":"429","severity":1,"message":"430","line":155,"column":15,"nodeType":"431","messageId":"432","endLine":155,"endColumn":48},{"ruleId":"429","severity":1,"message":"430","line":158,"column":14,"nodeType":"431","messageId":"432","endLine":158,"endColumn":58},{"ruleId":"394","severity":1,"message":"411","line":13,"column":17,"nodeType":"396","messageId":"397","endLine":13,"endColumn":20},{"ruleId":"394","severity":1,"message":"412","line":13,"column":30,"nodeType":"396","messageId":"397","endLine":13,"endColumn":35},{"ruleId":"394","severity":1,"message":"420","line":17,"column":10,"nodeType":"396","messageId":"397","endLine":17,"endColumn":17},{"ruleId":"394","severity":1,"message":"458","line":22,"column":8,"nodeType":"396","messageId":"397","endLine":22,"endColumn":10},{"ruleId":"394","severity":1,"message":"459","line":23,"column":10,"nodeType":"396","messageId":"397","endLine":23,"endColumn":25},{"ruleId":"394","severity":1,"message":"449","line":121,"column":10,"nodeType":"396","messageId":"397","endLine":121,"endColumn":23},{"ruleId":"421","severity":1,"message":"422","line":256,"column":5,"nodeType":"423","messageId":"424","endLine":332,"endColumn":6},{"ruleId":"394","severity":1,"message":"450","line":592,"column":12,"nodeType":"396","messageId":"397","endLine":592,"endColumn":17},{"ruleId":"394","severity":1,"message":"451","line":599,"column":12,"nodeType":"396","messageId":"397","endLine":599,"endColumn":24},{"ruleId":"394","severity":1,"message":"452","line":604,"column":12,"nodeType":"396","messageId":"397","endLine":604,"endColumn":28},{"ruleId":"429","severity":1,"message":"430","line":613,"column":15,"nodeType":"431","messageId":"432","endLine":613,"endColumn":38},{"ruleId":"429","severity":1,"message":"430","line":615,"column":14,"nodeType":"431","messageId":"432","endLine":615,"endColumn":46},{"ruleId":"429","severity":1,"message":"430","line":616,"column":15,"nodeType":"431","messageId":"432","endLine":616,"endColumn":48},{"ruleId":"429","severity":1,"message":"430","line":619,"column":14,"nodeType":"431","messageId":"432","endLine":619,"endColumn":58},{"ruleId":"394","severity":1,"message":"411","line":12,"column":17,"nodeType":"396","messageId":"397","endLine":12,"endColumn":20},{"ruleId":"394","severity":1,"message":"412","line":12,"column":30,"nodeType":"396","messageId":"397","endLine":12,"endColumn":35},{"ruleId":"394","severity":1,"message":"420","line":18,"column":10,"nodeType":"396","messageId":"397","endLine":18,"endColumn":17},{"ruleId":"421","severity":1,"message":"422","line":246,"column":5,"nodeType":"423","messageId":"424","endLine":329,"endColumn":6},{"ruleId":"394","severity":1,"message":"425","line":1,"column":17,"nodeType":"396","messageId":"397","endLine":1,"endColumn":25},{"ruleId":"394","severity":1,"message":"426","line":1,"column":26,"nodeType":"396","messageId":"397","endLine":1,"endColumn":35},{"ruleId":"394","severity":1,"message":"427","line":11,"column":9,"nodeType":"396","messageId":"397","endLine":11,"endColumn":21},{"ruleId":"394","severity":1,"message":"417","line":61,"column":22,"nodeType":"396","messageId":"397","endLine":61,"endColumn":35},{"ruleId":"394","severity":1,"message":"411","line":13,"column":10,"nodeType":"396","messageId":"397","endLine":13,"endColumn":13},{"ruleId":"394","severity":1,"message":"412","line":13,"column":15,"nodeType":"396","messageId":"397","endLine":13,"endColumn":20},{"ruleId":"394","severity":1,"message":"413","line":13,"column":22,"nodeType":"396","messageId":"397","endLine":13,"endColumn":28},{"ruleId":"394","severity":1,"message":"414","line":13,"column":30,"nodeType":"396","messageId":"397","endLine":13,"endColumn":35},{"ruleId":"394","severity":1,"message":"415","line":53,"column":12,"nodeType":"396","messageId":"397","endLine":53,"endColumn":26},{"ruleId":"394","severity":1,"message":"416","line":53,"column":28,"nodeType":"396","messageId":"397","endLine":53,"endColumn":45},{"ruleId":"394","severity":1,"message":"420","line":19,"column":10,"nodeType":"396","messageId":"397","endLine":19,"endColumn":17},{"ruleId":"441","severity":1,"message":"442","line":96,"column":13,"nodeType":"443","messageId":"444","endLine":98,"endColumn":14},{"ruleId":"394","severity":1,"message":"433","line":8,"column":3,"nodeType":"396","messageId":"397","endLine":8,"endColumn":11},{"ruleId":"394","severity":1,"message":"434","line":10,"column":3,"nodeType":"396","messageId":"397","endLine":10,"endColumn":6},{"ruleId":"394","severity":1,"message":"435","line":11,"column":3,"nodeType":"396","messageId":"397","endLine":11,"endColumn":6},{"ruleId":"394","severity":1,"message":"436","line":12,"column":3,"nodeType":"396","messageId":"397","endLine":12,"endColumn":11},{"ruleId":"394","severity":1,"message":"437","line":17,"column":10,"nodeType":"396","messageId":"397","endLine":17,"endColumn":13},{"ruleId":"394","severity":1,"message":"438","line":58,"column":21,"nodeType":"396","messageId":"397","endLine":58,"endColumn":33},{"ruleId":"403","severity":1,"message":"439","line":72,"column":4,"nodeType":"405","endLine":72,"endColumn":6,"suggestions":"460"},{"ruleId":"394","severity":1,"message":"427","line":9,"column":5,"nodeType":"396","messageId":"397","endLine":9,"endColumn":17},{"ruleId":"394","severity":1,"message":"445","line":47,"column":12,"nodeType":"396","messageId":"397","endLine":47,"endColumn":18},{"ruleId":"394","severity":1,"message":"446","line":47,"column":20,"nodeType":"396","messageId":"397","endLine":47,"endColumn":29},"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'getCookie' is defined but never used.","'axios' is defined but never used.","'Content' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkIAuth'. Either include it or remove the dependency array.","ArrayExpression",["461"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TableBody' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'isModalVisible' is assigned a value but never used.","'setIsModalVisible' is assigned a value but never used.","'setLoadingAdd' is assigned a value but never used.","'SmileOutlined' is defined but never used.","'FrownOutlined' is defined but never used.","'element' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'useEffect' is defined but never used.","'notification' is defined but never used.","'packageBuy' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Cascader' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Checkbox' is defined but never used.","'set' is defined but never used.","'setDataAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["462"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","'pushFile' is defined but never used.","'removeData' is defined but never used.","'loadingDelete' is assigned a value but never used.","'range' is defined but never used.","'disabledDate' is defined but never used.","'disabledDateTime' is defined but never used.","no-native-reassign",["463"],"no-negated-in-lhs",["464"],["465"],"'fs' is defined but never used.","'PanoramaFishEye' is defined but never used.",["466"],{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},"no-global-assign","no-unsafe-negation",{"desc":"467","fix":"471"},{"desc":"469","fix":"472"},"Update the dependencies array to be: [checkIAuth]",{"range":"473","text":"474"},"Update the dependencies array to be: [form]",{"range":"475","text":"476"},{"range":"477","text":"474"},{"range":"478","text":"476"},[1692,1694],"[checkIAuth]",[1363,1365],"[form]",[1692,1694],[1363,1365]]